base_images:
  base:
    name: "4.1"
    namespace: ocp
    tag: base
build_root:
  image_stream_tag:
    cluster: https://api.ci.openshift.org
    name: release
    namespace: openshift
    tag: golang-1.10
canonical_go_repository: github.com/coreos/etcd-operator
images:
- dockerfile_path: Dockerfile.openshift
  from: base
  to: etcd-operator
promotion:
  name: "4.1"
  namespace: ocp
resources:
  '*':
    limits:
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: "4.1"
  namespace: ocp
tests:
- as: etcd-operator-unit
  commands: |
    set -euxo pipefail
    curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
    hack/update_vendor.sh
    echo "IMAGE_FORMAT: ${IMAGE_FORMAT/\${component\}/etcd-operator}"
    printenv

    export ROLE_NAME=etcd_operator
    export ROLE_BINDING_NAME=etcd_operator

    sed -e "s/<ROLE_NAME>/${ROLE_NAME}/g" example/rbac/cluster-role-template.yaml | oc create -f -

    sed -e "s/<ROLE_NAME>/${ROLE_NAME}/g" \
      -e "s/<ROLE_BINDING_NAME>/${ROLE_BINDING_NAME}/g" \
      -e "s/<NAMESPACE>/${OPENSHIFT_BUILD_NAMESPACE}/g" \
      example/rbac/cluster-role-binding-template.yaml | oc create -f -

    go test -v ./test/e2e/ --kubeconfig "$KUBECONFIG" --operator-image="${IMAGE_FORMAT/\${component\}/etcd-operator}" --namespace=${OPENSHIFT_BUILD_NAMESPACE}
  openshift_installer_src:
    cluster_profile: aws
- as: e2e-aws
  commands: TEST_SUITE=openshift/conformance/parallel run-tests
  openshift_installer:
    cluster_profile: aws
    upgrade: false
